SELECT PRICE.BRANCH_NUMBER_NK AS BU,
  CONTACTS.ALIAS AS BU_NAME,
    
    --Trilogy Combo
    CASE
        WHEN (PRICE.PRICE_TYPE = 'G')
          THEN
          'G#' || PRICE.DISC_GROUP || '*' || PRICE.PRICE_COLUMN
        ELSE
          'P#' || PROD.PRODUCT_NK || '*' || PRICE.PRICE_COLUMN
        END
      AS TRICOMBO,
    
    --PMCM.AUTO Combo Code
    CASE
        WHEN (PRICE.PRICE_TYPE = 'G')
          THEN
          CONTACTS.ALIAS || '*' || PRICE.PRICE_COLUMN || '*G#' || PRICE.DISC_GROUP
        ELSE
          CONTACTS.ALIAS || '*' || PRICE.PRICE_COLUMN || '*P#' || PRICE.MASTER_PRODUCT_NK
        END
      AS PMCM_AUTO_PID,
    
    PRICE.PRICE_TYPE AS PTYPE,
    NVL(PRICE.DISC_GROUP,PROD.DISCOUNT_GROUP_NK) AS DG,
    BDG.RAW_DISC_TO_COST AS Current_SDTC,
    ROUND((1-BDG.RAW_DISC_TO_COST),4) AS Current_SMTC,
    SDTC.DEST_SDTC,
    SDTC.DEST_MULT,    
    PRICE.PRICE_COLUMN AS PC,    
    NVL(PROD.ALT1_CODE,'N/A') AS ALT,            
    PRICE.BASIS B,
    PRICE.OPERATOR_USED AS O,    
    ROUND(PRICE.MULTIPLIER, 4) AS FACTOR,
    
    CASE      
		--L Based Group Matrix Modifications
			  WHEN (PRICE.BASIS = 'L' AND PRICE.OPERATOR_USED = '-') THEN ROUND(1-(PRICE.MULTIPLIER),3)
			  WHEN (PRICE.BASIS = 'L' AND PRICE.OPERATOR_USED = 'X') THEN ROUND(PRICE.MULTIPLIER,3)
			  WHEN (PRICE.BASIS = 'L' AND PRICE.OPERATOR_USED = '+') THEN ROUND(1+(PRICE.MULTIPLIER),3)
				
				ELSE        
			    ROUND(PRICE.MULTIPLIER-PRICE.MULTIPLIER)
				END
    AS Current_PMult,
    ROUND(SDTC.DEST_MULT/(1-BDG.RAW_DISC_TO_COST),4) AS Adjustment_Factor,
    
    CASE      
		--L Based Group Matrix Modifications
			  WHEN (PRICE.BASIS = 'L' AND PRICE.OPERATOR_USED = '-') THEN ROUND((1-(PRICE.MULTIPLIER)) * (SDTC.DEST_MULT/(1-BDG.RAW_DISC_TO_COST)),4)
			  WHEN (PRICE.BASIS = 'L' AND PRICE.OPERATOR_USED = 'X') THEN ROUND((PRICE.MULTIPLIER) * (SDTC.DEST_MULT/(1-BDG.RAW_DISC_TO_COST)),4)
			  WHEN (PRICE.BASIS = 'L' AND PRICE.OPERATOR_USED = '+') THEN ROUND((1+(PRICE.MULTIPLIER)) * (SDTC.DEST_MULT/(1-BDG.RAW_DISC_TO_COST)),4)
				
				ELSE        
			    ROUND(PRICE.MULTIPLIER-PRICE.MULTIPLIER)
				END
    AS New_PMult,
    
    PRICE.UPDATE_TIMESTAMP UPDATE_DATE,
    CONTACTS.RPC 
    
FROM DW_FEI.PRICE_DIMENSION PRICE
     LEFT JOIN DW_FEI.PRODUCT_DIMENSION PROD
     ON PRICE.MASTER_PRODUCT_NK = PROD.PRODUCT_NK,
     AAF1046.BRANCH_CONTACTS CONTACTS,
     AAF1046.SDTC_CHANGE SDTC,
     DW_FEI.BRANCH_DISC_GROUP_DIMENSION BDG

WHERE PRICE.BRANCH_NUMBER_NK = CONTACTS.ACCOUNT_NK
    AND BDG.ACCOUNT_NUMBER_NK = CONTACTS.ACCOUNT_NK
    AND BDG.BRANCH_DISC_GROUP_NK = SDTC.DG_NUM
    AND SDTC.DG_NUM = (NVL(PRICE.DISC_GROUP, PROD.DISCOUNT_GROUP_NK))
    AND PRICE.DELETE_DATE IS NULL
    AND PRICE.PRICE_TYPE NOT IN ('T')
    
    --Choose Group/Product Matrix?
    --AND PRICE.PRICE_TYPE = 'P'
    
    --Choose Regional Pricing Center?
    AND CONTACTS.RPC = 'Atlantic'
                
    --Exclude Branches?
    AND CONTACTS.ACCOUNT_NK NOT IN('2623', '2600')
    
    --Include Branches?
    --AND CONTACTS.ACCOUNT_NK IN('1300')
    
    --Choose Discount Groups?
    --AND NVL(PRICE.DISC_GROUP, PROD.DISCOUNT_GROUP_NK) IN ('2001')
    
    --Exclude Basis?
    AND PRICE.BASIS NOT IN ('6')
    
    --Exclude Operator?
    AND PRICE.OPERATOR_USED NOT IN ('$')
    
    --Exclude Price Columns?
    AND PRICE.PRICE_COLUMN NOT IN ('0','023')
    
    --Choose Price Columns?
    --AND PRICE.PRICE_COLUMN NOT IN (170,171,172,173,175,180,181,182,183,190,191,192,193,205)
    
ORDER BY PRICE.BRANCH_NUMBER_NK,
  PRICE.PRICE_COLUMN;