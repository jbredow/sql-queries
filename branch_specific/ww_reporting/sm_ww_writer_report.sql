/* 
	sales by customer with channel sales broken out 
	horizontal view
*/
SELECT
	SUBSTR ( SWD.REGION_NAME, 1 ,3 ) DIST,
	PM_DET.ACCOUNT_NUMBER_NK BRANCH,
	NVL ( PM_DET.SELL_ALIAS_NAME, NULL ) ALIAS, 
	PM_DET.WRITER,
	--PM_DET.CUSTOMER_NAME,
	--PM_DET.CUSTOMER_TYPE C_TYPE,
	--PM_DET.PRICE_COLUMN PC,
	--PM_DET.MAIN_CUSTOMER_NK MAIN_NO,
	--PM_DET.MAIN_CUSTOMER_NAME,
	--PM_DET.CHANNEL_TYPE CHANNEL,
	SUM ( PM_DET.EXT_SALES_AMOUNT ) SALES,
	SUM ( PM_DET.EXT_AVG_COGS_AMOUNT ) AVG_COST,
	
  ROUND (
    (SUM ( PM_DET.EXT_SALES_AMOUNT ) - SUM ( PM_DET.EXT_AVG_COGS_AMOUNT ))
		/ CASE
        WHEN SUM ( PM_DET.EXT_SALES_AMOUNT ) > 0
        THEN SUM ( PM_DET.EXT_SALES_AMOUNT )
        ELSE
          1
      END
        , 3 )
     "GP %",
     
	-- MATRIX SALES
	SUM (
		CASE
			WHEN PM_DET.PRICE_CATEGORY IN 'MATRIX'
			THEN 
				( PM_DET.EXT_SALES_AMOUNT )
			ELSE
				0
		END )
			MTX_SALES,
	SUM (
		CASE
			WHEN PM_DET.PRICE_CATEGORY IN 'MATRIX'
			THEN 
				( PM_DET.EXT_AVG_COGS_AMOUNT )
			ELSE
				0
		END )
			MTX_AC,
	ROUND (
		SUM (
			CASE
				WHEN PM_DET.PRICE_CATEGORY IN 'MATRIX'
				THEN
					( PM_DET.EXT_SALES_AMOUNT - PM_DET.EXT_AVG_COGS_AMOUNT )
				ELSE
					0
			END)
	/ SUM (
		CASE
			WHEN PM_DET.PRICE_CATEGORY IN 'MATRIX'
			THEN
			CASE
				WHEN PM_DET.EXT_SALES_AMOUNT > 0
				THEN
					(PM_DET.EXT_SALES_AMOUNT)
				ELSE
					1
			END
			ELSE
				1
		END),
		3 )
			"MTX GP%",
	ROUND (
		SUM (
			CASE
				WHEN PM_DET.PRICE_CATEGORY IN 'MATRIX'
				THEN
					(PM_DET.EXT_SALES_AMOUNT)
				ELSE
				0
			END)
		/ SUM (
			CASE
				WHEN PM_DET.EXT_SALES_AMOUNT > 0
				THEN
					PM_DET.EXT_SALES_AMOUNT
				ELSE
					1
			END),
			3)
				"PM Use%$",
	-- CCOR SALES
	SUM (
		CASE
			WHEN PM_DET.PRICE_CATEGORY IN 'OVERRIDE'
			THEN 
				( PM_DET.EXT_SALES_AMOUNT )
			ELSE
			0
		END )
			CCOR_SALES,
	SUM (
		CASE
			WHEN PM_DET.PRICE_CATEGORY IN 'OVERRIDE'
			THEN 
				( PM_DET.EXT_AVG_COGS_AMOUNT )
			ELSE
			0
		END )
			CCOR_AC,
	ROUND (
		SUM (
			CASE
				WHEN PM_DET.PRICE_CATEGORY IN 'OVERRIDE'
				THEN
					( PM_DET.EXT_SALES_AMOUNT - PM_DET.EXT_AVG_COGS_AMOUNT )
				ELSE
					0
			END)
		/ SUM (
			CASE
				WHEN PM_DET.PRICE_CATEGORY IN 'OVERRIDE'
				THEN
					CASE
						WHEN PM_DET.EXT_SALES_AMOUNT > 0
						THEN
							(PM_DET.EXT_SALES_AMOUNT)
						ELSE
							1
					END
				ELSE
					1
				END),
			3)
				"CCOR GP%",
	ROUND (
		SUM (
			CASE
				WHEN PM_DET.PRICE_CATEGORY IN 'OVERRIDE'
				THEN
					(PM_DET.EXT_SALES_AMOUNT)
				ELSE
					0
			END)
			/ SUM (
				CASE
					WHEN PM_DET.EXT_SALES_AMOUNT > 0
					THEN
						PM_DET.EXT_SALES_AMOUNT
					ELSE
						1
				END),
			3)
				"CCOR Use%$",
		
	-- MANUAL SALES
	SUM (
		CASE
			WHEN PM_DET.PRICE_CATEGORY IN 'MANUAL'
			THEN 
				( PM_DET.EXT_SALES_AMOUNT )
			ELSE
				0
		END )
			MAN_SALES,
		SUM (
			CASE
			WHEN PM_DET.PRICE_CATEGORY IN 'MANUAL'
			THEN 
				( PM_DET.EXT_AVG_COGS_AMOUNT )
			ELSE
				0
		END )
			MAN_AC,
	ROUND (
		SUM (
			CASE
				WHEN PM_DET.PRICE_CATEGORY IN 'MANUAL'
				THEN
					( PM_DET.EXT_SALES_AMOUNT - PM_DET.EXT_AVG_COGS_AMOUNT )
				ELSE
					0
			END)
		/ SUM (
			CASE
				WHEN PM_DET.PRICE_CATEGORY IN 'MANUAL'
				THEN
					CASE
						WHEN PM_DET.EXT_SALES_AMOUNT > 0
						THEN
							(PM_DET.EXT_SALES_AMOUNT)
						ELSE
							1
					END
				ELSE
					1
			END),
		3)
			"MAN GP%",
	ROUND (
		SUM (
			CASE
			WHEN PM_DET.PRICE_CATEGORY IN 'MANUAL'
			THEN
				(PM_DET.EXT_SALES_AMOUNT)
			ELSE
				0
		END)
		/ SUM (
			CASE
			WHEN PM_DET.EXT_SALES_AMOUNT > 0
			THEN
				PM_DET.EXT_SALES_AMOUNT
			ELSE
				1
		END),
		3)
			"MAN Use%$",
			
	-- SPECIAL SALES
	SUM (
		CASE
			WHEN PM_DET.PRICE_CATEGORY IN 'SPECIAL'
			THEN 
				( PM_DET.EXT_SALES_AMOUNT )
			ELSE
				0
		END )
			"SP- SALES",
		SUM (
			CASE
			WHEN PM_DET.PRICE_CATEGORY IN 'SPECIAL'
			THEN 
				( PM_DET.EXT_AVG_COGS_AMOUNT )
			ELSE
				0
		END )
			"SP- AC",
	ROUND (
		SUM (
			CASE
				WHEN PM_DET.PRICE_CATEGORY IN 'SPECIAL'
				THEN
					( PM_DET.EXT_SALES_AMOUNT - PM_DET.EXT_AVG_COGS_AMOUNT )
				ELSE
					0
			END)
		/ SUM (
			CASE
				WHEN PM_DET.PRICE_CATEGORY IN 'SPECIAL'
				THEN
					CASE
					WHEN PM_DET.EXT_SALES_AMOUNT > 0
					THEN
						(PM_DET.EXT_SALES_AMOUNT)
					ELSE
						1
					END
				ELSE
					1
			END),
		3)
		"SP- GP%",
	ROUND (
		SUM (
			CASE
				WHEN PM_DET.PRICE_CATEGORY IN 'SPECIAL'
				THEN
					(PM_DET.EXT_SALES_AMOUNT)
				ELSE
					0
			END)
		/ SUM (
			CASE
				WHEN PM_DET.EXT_SALES_AMOUNT > 0
				THEN
					PM_DET.EXT_SALES_AMOUNT
				ELSE
					1
			END ),
		3 )
		"SP- Use%$",
		
	-- CREDIT SALES
	SUM (
		CASE
			WHEN PM_DET.PRICE_CATEGORY IN 'CREDITS'
			THEN 
				( PM_DET.EXT_SALES_AMOUNT )
			ELSE
				0
		END )
			CR_SALES,
		SUM (
			CASE
				WHEN PM_DET.PRICE_CATEGORY IN 'CREDITS'
				THEN 
					( PM_DET.EXT_AVG_COGS_AMOUNT )
				ELSE
					0
			END )
				CR_AC,
	ROUND (
		SUM (
			CASE
				WHEN PM_DET.PRICE_CATEGORY IN 'CREDITS'
				THEN
					( PM_DET.EXT_SALES_AMOUNT - PM_DET.EXT_AVG_COGS_AMOUNT )
				ELSE
					0
			END)
		/ SUM (
			CASE
				WHEN PM_DET.PRICE_CATEGORY IN 'CREDITS'
				THEN
				CASE
					WHEN PM_DET.EXT_SALES_AMOUNT > 0
					THEN
						(PM_DET.EXT_SALES_AMOUNT)
					ELSE
						1
				END
				ELSE
					1
			END),
		3)
			"CR GP%",
	ROUND (
		SUM (
			CASE
				WHEN PM_DET.PRICE_CATEGORY IN 'CREDITS'
				THEN
					(PM_DET.EXT_SALES_AMOUNT)
				ELSE
					0
			END)
			/ SUM (
				CASE
					WHEN PM_DET.EXT_SALES_AMOUNT > 0
					THEN
						PM_DET.EXT_SALES_AMOUNT
					ELSE
						1
				END),
			3)
			"CR Use%$"
		
FROM SALES_MART.PRICE_MGMT_DATA_DET PM_DET
		INNER JOIN
          EBUSINESS.SALES_DIVISIONS SWD
       ON (SWD.ACCOUNT_NUMBER_NK = PM_DET.ACCOUNT_NUMBER_NK)

WHERE (PM_DET.YEARMONTH  = '201508')
	--AND (PM_DET.ACCOUNT_NUMBER_NK IN ( '527' ))
	--AND (PM_DET.SELL_ALIAS_NAME = '1221')
	AND (PM_DET.IC_FLAG = 'REGULAR')
	AND ( SUBSTR ( SWD.REGION_NAME, 1 ,3 ) IN ( 
			 	 'D50', 'D51', 'D52', 'D53', 'D54'
				 ) )

	-- AND PM_DET.PRICE_CATEGORY
	-- AND PM_DET.PRICE_SUB_CATEGORY
	-- AND PM_DET.CHANNEL_TYPE
	-- AND PM_DET.SALES_TYPE

GROUP BY 
  SUBSTR ( SWD.REGION_NAME, 1 ,3 ),
	PM_DET.ACCOUNT_NUMBER_NK,
	NVL ( PM_DET.SELL_ALIAS_NAME, NULL ), 
	PM_DET.WRITER
	
  
ORDER BY 
	SUBSTR ( SWD.REGION_NAME, 1 ,3 ),
	PM_DET.ACCOUNT_NUMBER_NK,
	NVL ( PM_DET.SELL_ALIAS_NAME, NULL ), 
	PM_DET.WRITER
;