--Script calculates CCOR formula adjustments based upon a new vs old SDTC cost change
SELECT CUST.ACCOUNT_NUMBER_NK,
       CUST.ACCOUNT_NAME,
       
       --Trilogy Combo
       CASE
        WHEN (CCOR.OVERRIDE_TYPE = 'G')
          THEN
          CUST.CUSTOMER_NK || '*' || CCOR.CONTRACT_ID || '*' || 'G#' || CCOR.DISC_GROUP
        ELSE
          CUST.CUSTOMER_NK || '*' || CCOR.CONTRACT_ID || '*' || 'P#' || PROD.ALT1_CODE
        END
      AS TRICOMBO,
      
      --PMCM.Auto Code
      CASE
        WHEN (CCOR.OVERRIDE_TYPE = 'G')
          THEN
          CUST.ACCOUNT_NAME || '*' || CUST.CUSTOMER_NK || '*' || CCOR.CONTRACT_ID || '*' || 'G#' || CCOR.DISC_GROUP
        ELSE
          CUST.ACCOUNT_NAME || '*' || CUST.CUSTOMER_NK || '*' || CCOR.CONTRACT_ID || '*' || 'P#' || PROD.ALT1_CODE
        END
      AS PMCM_AUTO_PID,
       
      CUST.CUSTOMER_NK,
      CUST.CUSTOMER_NAME,
      CCOR.OVERRIDE_TYPE,
      CCOR.CONTRACT_ID,
      --CONTRACTS.CONTRACT_NAME,
      CCOR.DISC_GROUP,
      CCOR.MASTER_PRODUCT,
      BDG.RAW_DISC_TO_COST AS CURRENT_SDTC,
      (1-BDG.RAW_DISC_TO_COST) AS CURRENT_SMTC,
      SDTC.DEST_SDTC,
      SDTC.DEST_MULT,       
      CCOR.BASIS,       
      CCOR.OPERATOR_USED,
      CCOR.MULTIPLIER AS FACTOR,
       
      CASE      
      --L Based CCOR Modifications
        WHEN (CCOR.BASIS = 'L' AND CCOR.OPERATOR_USED = '-') THEN ROUND(1-(CCOR.MULTIPLIER),4)
			  WHEN (CCOR.BASIS = 'L' AND CCOR.OPERATOR_USED = 'X') THEN ROUND(CCOR.MULTIPLIER,4)
			  WHEN (CCOR.BASIS = 'L' AND CCOR.OPERATOR_USED = '+') THEN ROUND(1+(CCOR.MULTIPLIER),4)
				
				ELSE        
			    ROUND(CCOR.MULTIPLIER-CCOR.MULTIPLIER)
				END
    AS Current_CCORMult,
    
    ROUND(SDTC.DEST_MULT/(1-BDG.RAW_DISC_TO_COST),4) AS Adjustment_Factor,
    
    CASE      
		--L Based CCOR Modifications
			  WHEN (CCOR.BASIS = 'L' AND CCOR.OPERATOR_USED = '-') THEN ROUND((1-(CCOR.MULTIPLIER)) * (SDTC.DEST_MULT/(1-BDG.RAW_DISC_TO_COST)),4)
			  WHEN (CCOR.BASIS = 'L' AND CCOR.OPERATOR_USED = 'X') THEN ROUND((CCOR.MULTIPLIER) * (SDTC.DEST_MULT/(1-BDG.RAW_DISC_TO_COST)),4)
			  WHEN (CCOR.BASIS = 'L' AND CCOR.OPERATOR_USED = '+') THEN ROUND((1+(CCOR.MULTIPLIER)) * (SDTC.DEST_MULT/(1-BDG.RAW_DISC_TO_COST)),4)
				
				ELSE        
			    ROUND(CCOR.MULTIPLIER-CCOR.MULTIPLIER)
				END
    AS New_PMult,
       
       CCOR.EXPIRE_DATE,
       CCOR.LAST_UPDATE,
       CCOR.DELETE_DATE,
       CCOR.INSERT_TIMESTAMP,
       CCOR.UPDATE_TIMESTAMP
  FROM DW_FEI.CUSTOMER_OVERRIDE_DIMENSION CCOR
       LEFT JOIN DW_FEI.PRODUCT_DIMENSION PROD
       ON (CCOR.MASTER_PRODUCT = PROD.PRODUCT_NK),       
       AAF1046.BRANCH_CONTACTS CONTACTS,
       AAF1046.SDTC_CHANGE SDTC,
       DW_FEI.CUSTOMER_DIMENSION CUST,
       DW_FEI.BRANCH_DISC_GROUP_DIMENSION BDG
       --AAD9606.PR_DIST_BR_PC PR_DIST_BR_PC,
       --DW_FEI.CUSTOMER_CONTRACT_DIMENSION CONTRACTS
      
WHERE CCOR.BRANCH_NUMBER_NK = CONTACTS.ACCOUNT_NK
  AND CUST.CUSTOMER_GK = CCOR.CUSTOMER_GK
  AND BDG.ACCOUNT_NUMBER_NK = CONTACTS.ACCOUNT_NK
  AND BDG.BRANCH_DISC_GROUP_NK = SDTC.DG_NUM
  AND SDTC.DG_NUM = (NVL(CCOR.DISC_GROUP, PROD.DISCOUNT_GROUP_NK))
  --AND PR_DIST_BR_PC.BRANCH_NK = CCOR.BRANCH_NUMBER_NK
  --AND CONTRACTS.CONTRACT_ID = CCOR.CONTRACT_ID
  AND CONTACTS.RPC = 'Atlantic'
  --AND CONTACTS.ACCOUNT_NK = '1300'
  AND CONTACTS.ACCOUNT_NK NOT IN ('2623', '2600')
  AND CCOR.DELETE_DATE IS NULL
  AND CCOR.OPERATOR_USED NOT IN '$'
  AND CCOR.BASIS IN 'L'
  AND ((TRUNC(CCOR.EXPIRE_DATE) > TRUNC(SYSDATE)) OR CCOR.EXPIRE_DATE IS NULL)
  --AND CCOR.CONTRACT_ID != '63091'

ORDER BY CUST.CUSTOMER_NAME,
  CCOR.BRANCH_NUMBER_NK;